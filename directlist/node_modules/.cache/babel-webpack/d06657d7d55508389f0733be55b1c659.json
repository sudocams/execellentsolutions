{"ast":null,"code":"import _classCallCheck from \"/Volumes/files/Projects/excellent solutions/directlist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/files/Projects/excellent solutions/directlist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { isPlatformServer, isPlatformBrowser, CommonModule } from '@angular/common';\nimport { EventEmitter, Component, forwardRef, ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, Directive, Host, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\n * @fileoverview added by tsickle\n * Generated from: slick.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Slick component\n */\n\nimport * as Éµngcc0 from '@angular/core';\nvar _c0 = [\"*\"];\n\nvar SlickCarouselComponent = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   * @param {?} el\n   * @param {?} zone\n   * @param {?} platformId\n   */\n  function SlickCarouselComponent(el, zone, platformId) {\n    _classCallCheck(this, SlickCarouselComponent);\n\n    this.el = el;\n    this.zone = zone;\n    this.platformId = platformId;\n    this.afterChange = new EventEmitter();\n    this.beforeChange = new EventEmitter();\n    this.breakpoint = new EventEmitter();\n    this.destroy = new EventEmitter();\n    this.init = new EventEmitter(); // access from parent component can be a problem with change detection timing. Please use afterChange output\n\n    this.currentIndex = 0;\n    this.slides = [];\n    this.initialized = false;\n    this._removedSlides = [];\n    this._addedSlides = [];\n  }\n  /**\n   * On component destroy\n   * @return {?}\n   */\n\n\n  _createClass(SlickCarouselComponent, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unslick();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.ngAfterViewChecked();\n    }\n    /**\n     * On component view checked\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      var _this = this;\n\n      if (isPlatformServer(this.platformId)) {\n        return;\n      }\n\n      if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n        /** @type {?} */\n        var nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n\n        if (!this.initialized) {\n          if (nextSlidesLength > 0) {\n            this.initSlick();\n          } // if nextSlidesLength is zere, do nothing\n\n        } else if (nextSlidesLength === 0) {\n          // unslick case\n          this.unslick();\n        } else {\n          this._addedSlides.forEach(\n          /**\n          * @param {?} slickItem\n          * @return {?}\n          */\n          function (slickItem) {\n            _this.slides.push(slickItem);\n\n            _this.zone.runOutsideAngular(\n            /**\n            * @return {?}\n            */\n            function () {\n              _this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n            });\n          });\n\n          this._addedSlides = [];\n\n          this._removedSlides.forEach(\n          /**\n          * @param {?} slickItem\n          * @return {?}\n          */\n          function (slickItem) {\n            /** @type {?} */\n            var idx = _this.slides.indexOf(slickItem);\n\n            _this.slides = _this.slides.filter(\n            /**\n            * @param {?} s\n            * @return {?}\n            */\n            function (s) {\n              return s !== slickItem;\n            });\n\n            _this.zone.runOutsideAngular(\n            /**\n            * @return {?}\n            */\n            function () {\n              _this.$instance.slick('slickRemove', idx);\n            });\n          });\n\n          this._removedSlides = [];\n        }\n      }\n    }\n    /**\n     * init slick\n     * @return {?}\n     */\n\n  }, {\n    key: \"initSlick\",\n    value: function initSlick() {\n      var _this2 = this;\n\n      this.slides = this._addedSlides;\n      this._addedSlides = [];\n      this._removedSlides = [];\n      this.zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this2.$instance = jQuery(_this2.el.nativeElement);\n\n        _this2.$instance.on('init',\n        /**\n        * @param {?} event\n        * @param {?} slick\n        * @return {?}\n        */\n        function (event, slick) {\n          _this2.zone.run(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this2.init.emit({\n              event: event,\n              slick: slick\n            });\n          });\n        });\n\n        _this2.$instance.slick(_this2.config);\n\n        _this2.zone.run(\n        /**\n        * @return {?}\n        */\n        function () {\n          var _a;\n\n          _this2.initialized = true;\n          _this2.currentIndex = ((_a = _this2.config) === null || _a === void 0 ? void 0 : _a.initialSlide) || 0;\n        });\n\n        _this2.$instance.on('afterChange',\n        /**\n        * @param {?} event\n        * @param {?} slick\n        * @param {?} currentSlide\n        * @return {?}\n        */\n        function (event, slick, currentSlide) {\n          _this2.zone.run(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this2.afterChange.emit({\n              event: event,\n              slick: slick,\n              currentSlide: currentSlide,\n              first: currentSlide === 0,\n              last: slick.$slides.length === currentSlide + slick.options.slidesToScroll\n            });\n\n            _this2.currentIndex = currentSlide;\n          });\n        });\n\n        _this2.$instance.on('beforeChange',\n        /**\n        * @param {?} event\n        * @param {?} slick\n        * @param {?} currentSlide\n        * @param {?} nextSlide\n        * @return {?}\n        */\n        function (event, slick, currentSlide, nextSlide) {\n          _this2.zone.run(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this2.beforeChange.emit({\n              event: event,\n              slick: slick,\n              currentSlide: currentSlide,\n              nextSlide: nextSlide\n            });\n\n            _this2.currentIndex = nextSlide;\n          });\n        });\n\n        _this2.$instance.on('breakpoint',\n        /**\n        * @param {?} event\n        * @param {?} slick\n        * @param {?} breakpoint\n        * @return {?}\n        */\n        function (event, slick, breakpoint) {\n          _this2.zone.run(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this2.breakpoint.emit({\n              event: event,\n              slick: slick,\n              breakpoint: breakpoint\n            });\n          });\n        });\n\n        _this2.$instance.on('destroy',\n        /**\n        * @param {?} event\n        * @param {?} slick\n        * @return {?}\n        */\n        function (event, slick) {\n          _this2.zone.run(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this2.destroy.emit({\n              event: event,\n              slick: slick\n            });\n\n            _this2.initialized = false;\n          });\n        });\n      });\n    }\n    /**\n     * @param {?} slickItem\n     * @return {?}\n     */\n\n  }, {\n    key: \"addSlide\",\n    value: function addSlide(slickItem) {\n      this._addedSlides.push(slickItem);\n    }\n    /**\n     * @param {?} slickItem\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeSlide\",\n    value: function removeSlide(slickItem) {\n      this._removedSlides.push(slickItem);\n    }\n    /**\n     * Slick Method\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"slickGoTo\",\n    value: function slickGoTo(index) {\n      var _this3 = this;\n\n      this.zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this3.$instance.slick('slickGoTo', index);\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"slickNext\",\n    value: function slickNext() {\n      var _this4 = this;\n\n      this.zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this4.$instance.slick('slickNext');\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"slickPrev\",\n    value: function slickPrev() {\n      var _this5 = this;\n\n      this.zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this5.$instance.slick('slickPrev');\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"slickPause\",\n    value: function slickPause() {\n      var _this6 = this;\n\n      this.zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this6.$instance.slick('slickPause');\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"slickPlay\",\n    value: function slickPlay() {\n      var _this7 = this;\n\n      this.zone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this7.$instance.slick('slickPlay');\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"unslick\",\n    value: function unslick() {\n      var _this8 = this;\n\n      if (this.$instance) {\n        this.zone.runOutsideAngular(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this8.$instance.slick('unslick');\n        });\n        this.$instance = undefined;\n      }\n\n      this.initialized = false;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this9 = this;\n\n      if (this.initialized) {\n        /** @type {?} */\n        var config = changes['config'];\n\n        if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n          /** @type {?} */\n          var refresh = config.currentValue['refresh'];\n          /** @type {?} */\n\n          var newOptions = Object.assign({}, config.currentValue);\n          delete newOptions['refresh'];\n          this.zone.runOutsideAngular(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this9.$instance.slick('slickSetOption', newOptions, refresh);\n          });\n        }\n      }\n    }\n  }]);\n\n  return SlickCarouselComponent;\n}();\n\nSlickCarouselComponent.Éµfac = function SlickCarouselComponent_Factory(t) {\n  return new (t || SlickCarouselComponent)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone), Éµngcc0.ÉµÉµdirectiveInject(PLATFORM_ID));\n};\n\nSlickCarouselComponent.Éµcmp = Éµngcc0.ÉµÉµdefineComponent({\n  type: SlickCarouselComponent,\n  selectors: [[\"ngx-slick-carousel\"]],\n  inputs: {\n    config: \"config\"\n  },\n  outputs: {\n    afterChange: \"afterChange\",\n    beforeChange: \"beforeChange\",\n    breakpoint: \"breakpoint\",\n    destroy: \"destroy\",\n    init: \"init\"\n  },\n  exportAs: [\"slick-carousel\"],\n  features: [Éµngcc0.ÉµÉµProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(\n    /**\n    * @return {?}\n    */\n    function () {\n      return SlickCarouselComponent;\n    }),\n    multi: true\n  }]), Éµngcc0.ÉµÉµNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function SlickCarouselComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµprojectionDef();\n      Éµngcc0.ÉµÉµprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nSlickCarouselComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\nSlickCarouselComponent.propDecorators = {\n  config: [{\n    type: Input\n  }],\n  afterChange: [{\n    type: Output\n  }],\n  beforeChange: [{\n    type: Output\n  }],\n  breakpoint: [{\n    type: Output\n  }],\n  destroy: [{\n    type: Output\n  }],\n  init: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  Éµngcc0.ÉµsetClassMetadata(SlickCarouselComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-slick-carousel',\n      exportAs: 'slick-carousel',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(\n        /**\n        * @return {?}\n        */\n        function () {\n          return SlickCarouselComponent;\n        }),\n        multi: true\n      }],\n      template: '<ng-content></ng-content>'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.NgZone\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    afterChange: [{\n      type: Output\n    }],\n    beforeChange: [{\n      type: Output\n    }],\n    breakpoint: [{\n      type: Output\n    }],\n    destroy: [{\n      type: Output\n    }],\n    init: [{\n      type: Output\n    }],\n    config: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  SlickCarouselComponent.prototype.config;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.afterChange;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.beforeChange;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.breakpoint;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.destroy;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.init;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.$instance;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickCarouselComponent.prototype.currentIndex;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.slides;\n  /** @type {?} */\n\n  SlickCarouselComponent.prototype.initialized;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickCarouselComponent.prototype._removedSlides;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickCarouselComponent.prototype._addedSlides;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickCarouselComponent.prototype.el;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickCarouselComponent.prototype.zone;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickCarouselComponent.prototype.platformId;\n}\n\nvar SlickItemDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} el\n   * @param {?} platformId\n   * @param {?} carousel\n   */\n  function SlickItemDirective(el, platformId, carousel) {\n    _classCallCheck(this, SlickItemDirective);\n\n    this.el = el;\n    this.platformId = platformId;\n    this.carousel = carousel;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(SlickItemDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.carousel.addSlide(this);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.carousel.removeSlide(this);\n      }\n    }\n  }]);\n\n  return SlickItemDirective;\n}();\n\nSlickItemDirective.Éµfac = function SlickItemDirective_Factory(t) {\n  return new (t || SlickItemDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(PLATFORM_ID), Éµngcc0.ÉµÉµdirectiveInject(SlickCarouselComponent, 1));\n};\n\nSlickItemDirective.Éµdir = Éµngcc0.ÉµÉµdefineDirective({\n  type: SlickItemDirective,\n  selectors: [[\"\", \"ngxSlickItem\", \"\"]]\n});\n/** @nocollapse */\n\nSlickItemDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: SlickCarouselComponent,\n    decorators: [{\n      type: Host\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  Éµngcc0.ÉµsetClassMetadata(SlickItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxSlickItem]'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: SlickCarouselComponent,\n      decorators: [{\n        type: Host\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  SlickItemDirective.prototype.el;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickItemDirective.prototype.platformId;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  SlickItemDirective.prototype.carousel;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar SlickCarouselModule = function SlickCarouselModule() {\n  _classCallCheck(this, SlickCarouselModule);\n};\n\nSlickCarouselModule.Éµmod = Éµngcc0.ÉµÉµdefineNgModule({\n  type: SlickCarouselModule\n});\nSlickCarouselModule.Éµinj = Éµngcc0.ÉµÉµdefineInjector({\n  factory: function SlickCarouselModule_Factory(t) {\n    return new (t || SlickCarouselModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(SlickCarouselModule, {\n    declarations: function declarations() {\n      return [SlickCarouselComponent, SlickItemDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [SlickCarouselComponent, SlickItemDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  Éµngcc0.ÉµsetClassMetadata(SlickCarouselModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [SlickCarouselComponent, SlickItemDirective],\n      exports: [SlickCarouselComponent, SlickItemDirective]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-slick-carousel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { SlickCarouselComponent, SlickCarouselModule, SlickItemDirective };","map":{"version":3,"sources":["ngx-slick-carousel/slick.component.ts","ngx-slick-carousel/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport {\n  AfterViewChecked,\n  AfterViewInit,\n  Component,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\ndeclare const jQuery: any;\n\n/**\n * Slick component\n */\n@Component({\n  selector: 'ngx-slick-carousel',\n  exportAs: 'slick-carousel',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SlickCarouselComponent),\n    multi: true\n  }],\n  template: '<ng-content></ng-content>',\n})\nexport class SlickCarouselComponent implements OnDestroy, OnChanges, AfterViewInit, AfterViewChecked {\n\n    @Input() config: any;\n    @Output() afterChange: EventEmitter<{ event: any, slick: any, currentSlide: number, first: boolean, last: boolean }> = new EventEmitter();\n    @Output() beforeChange: EventEmitter<{ event: any, slick: any, currentSlide: number, nextSlide: number }> = new EventEmitter();\n    @Output() breakpoint: EventEmitter<{ event: any, slick: any, breakpoint: any }> = new EventEmitter();\n    @Output() destroy: EventEmitter<{ event: any, slick: any }> = new EventEmitter();\n    @Output() init: EventEmitter<{ event: any, slick: any }> = new EventEmitter();\n\n  public $instance: any;\n\n  // access from parent component can be a problem with change detection timing. Please use afterChange output\n  private currentIndex = 0;\n\n  public slides: any[] = [];\n  public initialized = false;\n  private _removedSlides: SlickItemDirective[] = [];\n  private _addedSlides: SlickItemDirective[] = [];\n\n  /**\n   * Constructor\n   */\n  constructor(private el: ElementRef,\n              private zone: NgZone,\n              @Inject(PLATFORM_ID) private platformId: string) {\n  }\n\n  /**\n   * On component destroy\n   */\n  ngOnDestroy() {\n    this.unslick();\n  }\n\n  ngAfterViewInit(): void {\n    this.ngAfterViewChecked();\n  }\n\n  /**\n   * On component view checked\n   */\n  ngAfterViewChecked() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n      const nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n      if (!this.initialized) {\n        if (nextSlidesLength > 0) {\n          this.initSlick();\n        }\n        // if nextSlidesLength is zere, do nothing\n      } else if (nextSlidesLength === 0) { // unslick case\n        this.unslick();\n      } else {\n        this._addedSlides.forEach(slickItem => {\n          this.slides.push(slickItem);\n          this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n          });\n        });\n        this._addedSlides = [];\n\n        this._removedSlides.forEach(slickItem => {\n          const idx = this.slides.indexOf(slickItem);\n          this.slides = this.slides.filter(s => s !== slickItem);\n          this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickRemove', idx);\n          });\n        });\n        this._removedSlides = [];\n      }\n    }\n  }\n\n  /**\n   * init slick\n   */\n  initSlick() {\n    this.slides = this._addedSlides;\n    this._addedSlides = [];\n    this._removedSlides = [];\n    this.zone.runOutsideAngular(() => {\n      this.$instance = jQuery(this.el.nativeElement);\n\n      this.$instance.on('init', (event, slick) => {\n        this.zone.run(() => {\n          this.init.emit({ event, slick });\n        });\n      });\n\n      this.$instance.slick(this.config);\n\n      this.zone.run(() => {\n        this.initialized = true;\n\n        this.currentIndex = this.config?.initialSlide || 0;\n      });\n\n            this.$instance.on('afterChange', (event, slick, currentSlide) => {\n                this.zone.run(() => {\n                    this.afterChange.emit({\n                        event,\n                        slick,\n                        currentSlide,\n                        first: currentSlide === 0,\n                        last: slick.$slides.length === currentSlide + slick.options.slidesToScroll\n                    });\n                    this.currentIndex = currentSlide;\n                });\n            });\n\n      this.$instance.on('beforeChange', (event, slick, currentSlide, nextSlide) => {\n        this.zone.run(() => {\n          this.beforeChange.emit({ event, slick, currentSlide, nextSlide });\n          this.currentIndex = nextSlide;\n        });\n      });\n\n      this.$instance.on('breakpoint', (event, slick, breakpoint) => {\n        this.zone.run(() => {\n          this.breakpoint.emit({ event, slick, breakpoint });\n        });\n      });\n\n      this.$instance.on('destroy', (event, slick) => {\n        this.zone.run(() => {\n          this.destroy.emit({ event, slick });\n          this.initialized = false;\n        });\n      });\n    });\n  }\n\n  addSlide(slickItem: SlickItemDirective) {\n    this._addedSlides.push(slickItem);\n  }\n\n  removeSlide(slickItem: SlickItemDirective) {\n    this._removedSlides.push(slickItem);\n  }\n\n  /**\n   * Slick Method\n   */\n  public slickGoTo(index: number) {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickGoTo', index);\n    });\n  }\n\n  public slickNext() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickNext');\n    });\n  }\n\n  public slickPrev() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPrev');\n    });\n  }\n\n  public slickPause() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPause');\n    });\n  }\n\n  public slickPlay() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPlay');\n    });\n  }\n\n  public unslick() {\n    if (this.$instance) {\n      this.zone.runOutsideAngular(() => {\n        this.$instance.slick('unslick');\n      });\n      this.$instance = undefined;\n    }\n    this.initialized = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.initialized) {\n      const config = changes['config'];\n      if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n        const refresh = config.currentValue['refresh'];\n        const newOptions = Object.assign({}, config.currentValue);\n        delete newOptions['refresh'];\n\n        this.zone.runOutsideAngular(() => {\n          this.$instance.slick('slickSetOption', newOptions, refresh);\n        });\n      }\n    }\n  }\n\n}\n\n@Directive({\n  selector: '[ngxSlickItem]',\n})\nexport class SlickItemDirective implements OnInit, OnDestroy {\n  constructor(public el: ElementRef,\n              @Inject(PLATFORM_ID) private platformId: string,\n              @Host() private carousel: SlickCarouselComponent) {\n  }\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.carousel.addSlide(this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.carousel.removeSlide(this);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {SlickCarouselComponent, SlickItemDirective} from './slick.component';\n\nexport * from './slick.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ],\n  exports: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ]\n})\nexport class SlickCarouselModule {\n}\n"]},"metadata":{},"sourceType":"module"}